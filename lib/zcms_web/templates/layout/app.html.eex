<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Hello Zcms!</title>
    <link rel="stylesheet" href="<%= static_path(@conn, "/css/app.css") %>">
  </head>

  <body>
    <div class="container">
      <header class="header">
        <nav role="navigation">
          <ul class="nav nav-pills pull-right">
            <li><a href="http://www.phoenixframework.org/docs">Get Started</a></li>
          </ul>
        </nav>
        <span class="logo"></span>
      </header>
      <button id="btn-login" class="btn btn-primary btn-margin">
          Log In
      </button>
      <button id="btn-logout" class="btn btn-primary btn-margin">
          Log Out
      </button>
      <p class="alert alert-info" role="alert"><%= get_flash(@conn, :info) %></p>
      <p class="alert alert-danger" role="alert"><%= get_flash(@conn, :error) %></p>
      <b class="status"></b>
      <main role="main">
        <%= render @view_module, @view_template, assigns %>
      </main>

    </div> <!-- /container -->
    <div id="standalone"></div>
    <script src="<%= static_path(@conn, "/js/app.js") %>"></script>
    <script src="https://cdn.auth0.com/js/auth0/9.5.1/auth0.min.js"></script>
    <script>
      const cbx = [];
      window.onLogin = function(f) {
        cbx.push(f);
      }
      window.addEventListener('load', function() {
        var idToken;
        var accessToken;
        var expiresAt;

        var webAuth = new auth0.WebAuth({
          domain: 'jannes.eu.auth0.com',
          clientID: 'ERsPWL3VKrVGWmIZhQ30otK6h4hqv3jI',
          responseType: 'token id_token code',
          scope: 'offline_access openid profile email https://stark-profuse-basenji.gigalixirapp.com/app_metadata',
          redirectUri: window.location.href
        });

        var loginStatus = document.querySelector('.status');
        var loginBtn = document.getElementById('btn-login');
        var logoutBtn = document.getElementById('btn-logout');
        var loginres = document.getElementById('login-result');
        var endpointdiv = document.getElementById('endpoints');


        loginBtn.addEventListener('click', function(e) {
          e.preventDefault();
          webAuth.authorize();
        });
        logoutBtn.addEventListener('click', logout);

        function handleAuthentication() {
         webAuth.parseHash(function(err, authResult) {
           if (authResult && authResult.accessToken && authResult.idToken) {
             window.location.hash = '';
             localLogin(authResult);
             loginBtn.style.display = 'none';
           } else if (err) {
             console.log(err);
             alert(
               'Error: ' + err.error + '. Check the console for further details.'
             );
           }
           displayButtons();
         });
        }

        function localLogin(authResult) {
         // Set isLoggedIn flag in localStorage
         localStorage.setItem('isLoggedIn', 'true');
         (x => { window.fetch = (a, b, ...args) => x(a, { ...b, headers: { "authorization": "Bearer " + authResult.idToken, ...(b.headers || {}) } }, ...args) })(window.fetch);
         const ostr = '(x => { window.fetch = (a, b, ...args) => x(a, { ...(b || {}), headers: { "authorization": "Bearer " + authResult.idToken, ...((b || {}).headers || {}) } }, ...args) })(window.fetch)';
         if(loginres)  loginres.innerHTML = '<div><p>Use the following code (just paste it to the console) to make your requests authenticated in other tabs</p><p>To inspect the graphQL, I suggest using <a href="https://chrome.google.com/webstore/detail/chromeiql/fkkiamalmpiidkljmicmjfbieiclmeij">the graphiql Chrome extension</a></p></div>'
         if(loginres)  loginres.innerHTML += "<pre>" + ostr + "</pre>";
         if(loginres)  loginres.innerHTML += "<div>Full result:</div><pre>" + JSON.stringify(authResult, null, "  ") + "</pre>";

         if(endpointdiv)  endpointdiv.innerHTML = "....fetching endpoints....";
         fetch("/control/api", {}).then(i => i.json()).then(i => {
            if(endpointdiv)  endpointdiv.innerHTML = "<h2>Endpoints: </h2><div><pre>" + JSON.stringify(i, null, "  ") + "</pre></div>"
         });
         while(cbx.length) {
           cbx.pop()(authResult.idToken);
         }
         // Set the time that the access token will expire at
         expiresAt = JSON.stringify(
           authResult.expiresIn * 1000 + new Date().getTime()
         );
         accessToken = authResult.accessToken;
         idToken = authResult.idToken;
        }

        function renewTokens() {
         webAuth.checkSession({}, (err, authResult) => {
           if (authResult && authResult.accessToken && authResult.idToken) {
             localLogin(authResult);
           } else if (err) {
             alert(
                 'Could not get a new token '  + err.error + ':' + err.error_description + '.'
             );
             logout();
           }
           displayButtons();
         });
        }

        function logout() {
         // Remove isLoggedIn flag from localStorage
         localStorage.removeItem('isLoggedIn');
         // Remove tokens and expiry time
         accessToken = '';
         idToken = '';
         expiresAt = 0;
         if(loginres)  loginres.innerHTML = "Logged out successfully";
         displayButtons();
        }

        function isAuthenticated() {
         // Check whether the current time is past the
         // Access Token's expiry time
         var expiration = parseInt(expiresAt) || 0;
         return localStorage.getItem('isLoggedIn') === 'true' && new Date().getTime() < expiration;
        }

        function displayButtons() {
         if (isAuthenticated()) {
           loginBtn.style.display = 'none';
           logoutBtn.style.display = 'inline-block';
           loginStatus.innerHTML = 'You are logged in!';
         } else {
           loginBtn.style.display = 'inline-block';
           logoutBtn.style.display = 'none';
           loginStatus.innerHTML =
             'You are not logged in! Please log in to continue.';
           if(endpointdiv) endpointdiv.innerHTML = "";
         }
        }

        if (localStorage.getItem('isLoggedIn') === 'true') {
          renewTokens();
        } else {
          handleAuthentication();
        }

      });
    </script>
  </body>
</html>
