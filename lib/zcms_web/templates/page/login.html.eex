<button id="btn-login" class="btn btn-primary btn-margin">
    Log In
</button>

<button id="btn-logout" class="btn btn-primary btn-margin">
    Log Out
</button>

<div id="home-view">
  <h2>Important endpoints: </h2>
  <div><ul>
    <li></li>
    <li></li>
    <li></li>
    <li></li>
  </ul></div>
  <h2>Current status:</h2>
  <b class="status"></b>
  <div id="login-result"></div>
</div>

<script src="https://cdn.auth0.com/js/auth0/9.5.1/auth0.min.js"></script>
<script>
  window.addEventListener('load', function() {
    var idToken;
    var accessToken;
    var expiresAt;

    var webAuth = new auth0.WebAuth({
      domain: 'jannes.eu.auth0.com',
      clientID: 'ERsPWL3VKrVGWmIZhQ30otK6h4hqv3jI',
      responseType: 'token id_token',
      scope: 'openid profile email',
      redirectUri: window.location.href
    });

    var loginStatus = document.querySelector('#home-view .status');
    var loginBtn = document.getElementById('btn-login');
    var logoutBtn = document.getElementById('btn-logout');
    var loginres = document.getElementById('login-result');


    loginBtn.addEventListener('click', function(e) {
      e.preventDefault();
      webAuth.authorize();
    });
    logoutBtn.addEventListener('click', logout);

    function handleAuthentication() {
     webAuth.parseHash(function(err, authResult) {
       if (authResult && authResult.accessToken && authResult.idToken) {
         window.location.hash = '';
         localLogin(authResult);
         loginBtn.style.display = 'none';
       } else if (err) {
         console.log(err);
         alert(
           'Error: ' + err.error + '. Check the console for further details.'
         );
       }
       displayButtons();
     });
    }

    function localLogin(authResult) {
     // Set isLoggedIn flag in localStorage
     localStorage.setItem('isLoggedIn', 'true');
     (x => { window.fetch = (a, b, ...args) => x(a, { ...b, headers: { "authorization": "Bearer " + authResult.idToken, ...(b.headers || {}) } }, ...args) })(window.fetch);
     const ostr = '(x => { window.fetch = (a, b, ...args) => x(a, { ...(b || {}), headers: { "authorization": "Bearer " + authResult.idToken, ...((b || {}).headers || {}) } }, ...args) })(window.fetch)';
     loginres.innerHTML = '<div><p>Use the following code (just paste it to the console) to make your requests authenticated in other tabs</p><p>To inspect the graphQL, I suggest using <a href="https://chrome.google.com/webstore/detail/chromeiql/fkkiamalmpiidkljmicmjfbieiclmeij">the graphiql Chrome extension</a></p></div>'
     loginres.innerHTML += "<pre>" + ostr + "</pre>";
     loginres.innerHTML += "<div>Full result:</div><pre>" + JSON.stringify(authResult, null, "  ") + "</pre>";
     // Set the time that the access token will expire at
     expiresAt = JSON.stringify(
       authResult.expiresIn * 1000 + new Date().getTime()
     );
     accessToken = authResult.accessToken;
     idToken = authResult.idToken;
    }

    function renewTokens() {
     webAuth.checkSession({}, (err, authResult) => {
       if (authResult && authResult.accessToken && authResult.idToken) {
         localLogin(authResult);
       } else if (err) {
         alert(
             'Could not get a new token '  + err.error + ':' + err.error_description + '.'
         );
         logout();
       }
       displayButtons();
     });
    }

    function logout() {
     // Remove isLoggedIn flag from localStorage
     localStorage.removeItem('isLoggedIn');
     // Remove tokens and expiry time
     accessToken = '';
     idToken = '';
     expiresAt = 0;
     loginres.innerHTML = "Logged out successfully";
     displayButtons();
    }

    function isAuthenticated() {
     // Check whether the current time is past the
     // Access Token's expiry time
     var expiration = parseInt(expiresAt) || 0;
     return localStorage.getItem('isLoggedIn') === 'true' && new Date().getTime() < expiration;
    }

    function displayButtons() {
     if (isAuthenticated()) {
       loginBtn.style.display = 'none';
       logoutBtn.style.display = 'inline-block';
       loginStatus.innerHTML = 'You are logged in!';
     } else {
       loginBtn.style.display = 'inline-block';
       logoutBtn.style.display = 'none';
       loginStatus.innerHTML =
         'You are not logged in! Please log in to continue.';
     }
    }

    if (localStorage.getItem('isLoggedIn') === 'true') {
      renewTokens();
    } else {
      handleAuthentication();
    }

  });
</script>
