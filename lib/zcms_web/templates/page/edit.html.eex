<!-- jQuery -->
<script src="https://code.jquery.com/jquery-3.3.1.min.js" integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8=" crossorigin="anonymous"></script>

<!-- Bootstrap3 -->
<!-- Latest compiled and minified CSS -->
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
<!-- Optional theme -->
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap-theme.min.css" >
<!-- Latest compiled and minified JavaScript -->
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js" ></script>

<!-- Handlebars -->
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/handlebars.js/4.0.12/handlebars.min.js"></script>

<!-- Flatpickr -->
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/flatpickr/4.5.1/flatpickr.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/flatpickr/4.5.1/flatpickr.min.css" />

<!-- JSON-Editor -->
<script src="https://cdn.jsdelivr.net/npm/@json-editor/json-editor@latest/dist/jsoneditor.min.js"></script>

<style type="text/css">
body {
  margin: 1em;
}
#form, #texteditor {
  width: 100%;
  min-height: 5vh;
}
</style>
<select id="select" name="choice"></select>
<div id="form"></div>
<button id="create">Create new</button>
<div id="status"></div>
<textarea id="texteditor"></textarea>
<pre id="result"></pre>

<script type="text/javascript">

// Handlebars helper for displaying timestamps in human frindly format
Handlebars.registerHelper("TimeStampToDateTime", function(ts) {
  return ts ? new Date(ts * 1000) : 'empty';
});

const afterLogin = new Promise(resolve => {
  const check = (f) => {
    if(window.onLogin) {
      return window.onLogin(() => resolve());
    }
    return window.setTimeout(f, 100);
  }
  check(check);
});

let save = () => null;
let textchange = () => null;

const create = document.getElementById('create');
create.addEventListener("click", () => save());
const texteditor = document.getElementById("texteditor");
texteditor.addEventListener("change", (a,b) => textchange(a,b));

afterLogin.then(() => {
  console.log("Logged in");
  let reset;
  fetch("/api/v1/schema").then(i => i.json()).then(i => {
    const data = i.data;
    const select = document.getElementById("select");
    const element = document.getElementById('form');
    const result = document.getElementById('result');

    const status = document.getElementById("status");


    const ihtml = data.map((i, idx) => `<option value="${idx}">${i.title}</option>`);
    select.innerHTML = ihtml;
    const onChange = nr => {
      const options = {
        "theme": "bootstrap3",
        "template": "handlebars",
        "iconlib": "bootstrap3",
        "schema": data[nr]
      }

      const editor = new JSONEditor(element, options);
      editor.disable();
      const isDone = fetch(`/api/v1/${data[nr].title}`).then(i => i.json()).then(d => {
        editor.enable();
        if(d.data.length > 0) {
          const out = [
            "__owner__",
            "_modified",
            "_links",
            "_lastModifiedBy",
            "_id",
            "_created",
            "_author",
            "_permissions"
          ];
          const q = Object.entries(d.data[0]).filter(([k]) => !out.includes(k)).reduce((p, [k, v]) => ({
            ...p,
            [k]: v
          }), {});
          editor.setValue(q);
        }
      });
      const f = function() {
        const errors = editor.validate();
        if(errors.length) {
          create.disabled = true;
        } else {
          create.disabled = false;
        }
        texteditor.value = JSON.stringify(editor.getValue());
        result.innerHTML = errors.length ? JSON.stringify(errors, null, "  ") : JSON.stringify(editor.getValue(), null, "  ");
      };
      textchange = (evt) => {
        const json = JSON.parse(evt.target.value);
        if(json && JSON.stringify(editor.getValue()) !== JSON.stringify(json)) {
          editor.setValue(json);
        }
      };
      save = () => {
        create.disabled = true;
        status.innerHTML = "....Saving....";
        editor.disable();
        fetch(`/api/v1/${data[nr].title}`, {
          method: "POST",
          mode: "cors",
          body: JSON.stringify(editor.getValue()),
          headers: { "content-type":"application/json" }
        }).then(() => {
          window.setTimeout(() => {
            status.innerHTML = "";
          }, 5000);
          create.disabled = false;
          status.innerHTML = "Success!!";
          editor.enable();
          editor.setValue({});
        }).catch((...args) => {
          console.error(args);
          window.setTimeout(() => {
            status.innerHTML = "";
          }, 5000);
          create.disabled = false;
          status.innerHTML = "Failiure!!";
          editor.enable();
          editor.setValue({});
        });
      };

      editor.on('change', f);
      return () =>
        isDone.then(() => {
          editor.off('change',f);
          editor.destroy();
        });
    };
    select.addEventListener("change", (evt) => {
      reset().then(() => {
        reset = onChange(parseInt(evt.target.value));
      });
    });
    reset = onChange(0);
  });
});
</script>
